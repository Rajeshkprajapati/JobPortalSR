
@model IEnumerable<BulkUploadSummaryViewModel<BulkJobPostSummaryDetailViewModel>>

@{
    ViewData["Title"] = "Bulk Job Post Summary";
}

<div id="titlebar" class="banner-bg row" style="background-image: url(/Assets/images/all-categories-photo.jpg);">
    <div class="container titlebar-inner">
        <div class="row">
            <div class="col-sm-8">
                <h2 class="whitetitle"><span class="title-bdr-black-4">@ViewData["Title"]</span></h2>
            </div>
            <div class="col-sm-4 text-right spacer-top-10">
                <a href="/JobSeekerManagement" class="btn btn-primary btn-lg">Search more jobs</a>
            </div>
        </div>
    </div>
</div>
<nav id="breadcrumbs" class="container">
    <ol class="breadcrumb">
        <li><a href="#">Home</a></li>
        <li class="active">@ViewData["Title"]</li>
    </ol>
</nav>

<div class="container">
    @if (null != Model && Model.Count() > 0)
    {
        int summaryIndex = -1;
        foreach (BulkUploadSummaryViewModel<BulkJobPostSummaryDetailViewModel> summary in Model)
        {
            summaryIndex++;
            <div class="d-flex align-center spacer-bottom-20">
                <div class="flex-1">
                    <h2 class="blacktitle">@summary.FileName</h2>
                </div>
                <input type="button" class="btn btn-link quick-links text-uppercase BulkExportbtn" onclick="tableToExcel('@("jobPostSummary_"+summaryIndex)', 'bulk upload error')" value="Export Data">
            </div>
            int rowIndex = -1;
            <div class="table-responsive">
                <table id="@("jobPostSummary_"+summaryIndex)" class="table table-bordered table-hover jobpostSummary">
                    @foreach (BulkJobPostSummaryDetailViewModel sDetail in summary.Summary)
                    {
                        rowIndex++;
                        var props = sDetail.GetType().GetProperties();
                        <tr>
                            @{
                                foreach (var prop in props)
                                {
                                    var data = prop.GetValue(sDetail);
                                    <td>
                                        @if (prop.Name == "ErrorDetails")
                                        {
                                            <StringToOrderedList css-classes="@(rowIndex>0?"error-class":"")" html-content="@data"></StringToOrderedList>
                                        }
                                        else
                                        {
                                            <span class="@(Convert.ToString(data) == "Failed" ? "error-class" : (prop.Name=="Status" && Convert.ToString(data) == "Success")?"success-class":"")" title="@data">@Html.Raw(data)</span>
                                        }
                                    </td>
                                }
                            }
                        </tr>
                    }
                </table>
            </div>
        }
    }
</div>
<script type="text/javascript">
    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
            , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
            , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (table, name) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
            window.location.href = uri + base64(format(template, ctx))
        }
    })()
</script>