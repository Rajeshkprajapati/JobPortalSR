@using JobPortal.Model.DataViewModel.Employer.JobPost;
@model JobPostViewModel
<div class="row col-md-12">

    <form id="EditDraftJob">
        <input type="hidden" name="JobPostId" value="@Model.JobPostId" />
        <div class="form-group row">
            <label class="col-md-2" for="companyName">Company Name</label>
            <div class="col-sm-10">
                <input type="text" class=" form-control" readonly name="CompanyName" value="@Model.CompanyName" id="companyName" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="jobTitle">Job Title</label>
            <div class="col-sm-10">
                <input type="text" class=" form-control" name="JobTitleByEmployer" value="@Model.JobTitleByEmployer" id="jobTitle" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="jobRole">Job Role</label>
            <div class="col-sm-10">
                <select class="chosen-select jobRoles" id="jobRole" multiple="multiple" asp-items="@(new SelectList(ViewBag.JobRoles, "JobTitleId", "JobTitleName"))"></select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="country">Country</label>
            <div class="col-sm-10">
                <select class="form-control" name="CountryCode" asp-items="@(new SelectList(ViewBag.Countries, "CountryCode", "Country", Model.CountryCode))" id="country"></select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="state">State</label>
            <div class="col-sm-10">
                <select class="form-control" id="state" onchange="stateChange(this.value)" name="StateCode" asp-items="@(new SelectList(ViewBag.States, "StateCode", "State", Model.StateCode))"></select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="city">City</label>
            <div class="col-sm-10">
                <select class="form-control" id="city" name="CityCode" asp-items="@(new SelectList(ViewBag.Cities, "CityCode", "City", Model.CityCode))"></select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="monthlySalary">Posting Date</label>
            <div class="col-sm-10">
                <input type="date" class=" form-control unstyled" onclick="toggleCalendar(this)" id="startDate" name="PositionStartDate" placeholder="yyyy-mm-dd" value="@Model.PositionStartDate" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="monthlySalary">Expiry Date</label>
            <div class="col-sm-10">
                <input type="date" min="2020-01-01" max="2030-12-31" onclick="toggleCalendar(this)" class=" form-control unstyled" id="endDate" name="PositionEndDate" placeholder="yyyy-mm-dd" value="@Model.PositionEndDate" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="ctc">CTC</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="ctc" name="CTC" value="@Model.CTC" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="hiringCriteria">Hiring Criteria</label>
            <div class="col-sm-10">
                <input type="text" class=" form-control" id="hiringCriteria" name="HiringCriteria" value="@Model.HiringCriteria" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="jobType">Job Type</label>
            <div class="col-sm-10">
                @*<input type="hidden" id="jobType" name="JobType" value="Model.JobType" />
                    <input type="text" class=" form-control" id="jobTypeSummary" name="JobTypeSummary" value="Model.JobTypeSummary" />*@
                <select class=" form-control" id="jobType" name="JobType" asp-items="@(new SelectList(ViewBag.JobTypes, "Id", "Type", Model.JobType))"></select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="financialYear">Financial Year</label>
            <div class="col-sm-10">
                <select class="form-control" name="FinancialYear" id="financialYear">
                    @{
                        int currYears = DateTime.Now.Year;
                        @for (int i = (currYears - 1); i <= currYears; i++)
                        {
                            if (i == Model.FinancialYear)
                            {
                                <option selected value="@i">@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="spoc">SPOC</label>
            <div class="col-sm-10">
                <input type="text" class=" form-control" id="spoc" name="ContactPerson" value="@Model.ContactPerson" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="spocEmail">SPOC Email</label>
            <div class="col-sm-10">
                <input type="email" class=" form-control" id="spocEmail" name="SPOCEmail" value="@Model.SPOCEmail" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="spocContact">SPOC Contact</label>
            <div class="col-sm-10">
                <input type="number" class=" form-control" id="spocContact" name="Mobile" value="@Model.Mobile" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2" for="jobDetails">Job Details</label>
            <div class="col-sm-10">
                <textarea class="form-control ckeditor" cols="25" name="JobDetails" id="jobDetails">@Model.JobDetails</textarea>
            </div>
        </div>

    </form>

</div>

<script>
    CKEDITOR.replace('jobDetails');
    $(document).ready(function () {
        $("#jobRole").chosen({width:"100%"});
        $(".chosen-select-no-single").chosen({});
        var str_array = '@Model.JobTitleId.Replace(" ", "")';
        var arr = str_array.split(',');
        $("#jobRole").val(arr).trigger("chosen:updated");
        
        initializeCalendars(true,true);
    });

    function initCalendar(selector, date, startDate) {
        let cal = tail.DateTime(selector, {
            dateFormat: "YYYY-mm-dd",
            timeFormat: false,
            position: "bottom",
            closeButton: false,
            dateStart: startDate ? startDate : new Date('01/01/2015')
        });
        cal.selectDate(date);
        cal.reload();
        $(selector).data(cal);
    }
    function initializeCalendars(isStartPicker, isEndPicker) {
        if (isStartPicker) {
            let sDate = new Date();
            //  start job
            initCalendar("input[type=date]#startDate", sDate, sDate);
            $("input[type=date]#startDate").data()
                .on("open", () => {
                })
                .on("close", () => {
                })
                .on("change", () => {
                    initializeCalendars(false, true);
                });
        }
        if (isEndPicker) {
            //  end job
            let sd = $("input[type=date]#startDate").data().fetchDate();
            initCalendar("input[type=date]#endDate",
                new Date(sd.setMonth(sd.getMonth() + 1)),
                new Date(sd.setMonth(sd.getMonth() - 1)));

            $("input[type=date]#endDate").data()
                .on("open", () => {
                })
                .on("close", () => {
                })
                .on("change", () => {

                });
        }
    }
    function toggleCalendar(_this) {        
        $(_this).find("input[type=date]").data().toggle();
    }
</script>


