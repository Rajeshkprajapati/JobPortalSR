@using JobPortal.Model.DataViewModel.Employer.JobPost;
@model JobPostViewModel

<form id="EditDraftJob">
    <input type="hidden" name="JobPostId" value="@Model.JobPostId" />
    <div class="form-group">
        <label class="input-label" for="companyName">Company Name</label>
        <input type="text" class="form-control input-elements" readonly name="CompanyName" value="@Model.CompanyName" id="companyName" />
    </div>
    <div class="form-group">
        <label class="input-label" for="jobTitle">Job Title</label>
        <input type="text" class="form-control input-elements" required name="JobTitleByEmployer" value="@Model.JobTitleByEmployer" id="jobTitle" />
    </div>
    <div class="form-group">
        <input type="hidden" id="hdnJobTitleId" name="JobTitleId" for="JobTitleId" />
        @*<label class="input-label" for="jobRole">Job Role</label>*@
        <select class="form-control jobRoles" id="jobRole" required multiple="multiple" asp-items="@(new SelectList(ViewBag.JobRoles, "JobTitleId", "JobTitleName"))" data-placeholder="Choose Job Title"></select>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="country">Country</label>
                <select class="form-control input-elements" name="CountryCode" required asp-items="@(new SelectList(ViewBag.Countries, "CountryCode", "Country", Model.CountryCode))" id="country"></select>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="state">State</label>
                <select class="form-control input-elements" id="state" onchange="stateChange(this.value)" required name="StateCode" asp-items="@(new SelectList(ViewBag.States, "StateCode", "State", Model.StateCode))"></select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="city">City</label>
                <select class="form-control input-elements" id="city" name="CityCode" required asp-items="@(new SelectList(ViewBag.Cities, "CityCode", "City", Model.CityCode))"></select>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="monthlySalary">Posting Date</label>
                <input type="date" class="form-control input-elements unstyled" onclick="toggleCalendar(this)" id="startDate" name="PositionStartDate" placeholder="yyyy-mm-dd" value="@Model.PositionStartDate" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="monthlySalary">Expiry Date</label>
                <input type="date" min="2020-01-01" max="2030-12-31" onclick="toggleCalendar(this)" class="form-control input-elements unstyled" id="endDate" name="PositionEndDate" placeholder="yyyy-mm-dd" value="@Model.PositionEndDate" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="spocEmail">SPOC Email</label>
                <input type="email" class="form-control input-elements inp" id="spocEmail" required name="SPOCEmail" value="@Model.SPOCEmail" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="spocContact">SPOC Contact</label>
                <input type="number" class="form-control input-elements" id="spocContact" required name="Mobile" value="@Model.Mobile" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="input-label" for="jobDetails">Job Details</label>
        <textarea class="form-control input-elements ckeditor" cols="25" name="JobDetails" required id="jobDetails">@Model.JobDetails</textarea>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="ctc">CTC</label>
                <input type="number" min="0" class="form-control input-elements" id="ctc" required name="CTC" value="@Model.CTC" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="hiringCriteria">Hiring Criteria</label>
                <input type="text" class="form-control input-elements" id="hiringCriteria" required name="HiringCriteria" value="@Model.HiringCriteria" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="jobType">Job Type</label>
                <select class="form-control input-elements" id="jobType" required name="JobType" asp-items="@(new SelectList(ViewBag.JobTypes, "Id", "Type", Model.JobType))"></select>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label class="input-label" for="spoc">SPOC</label>
                <input type="text" class="form-control input-elements" id="spoc" required name="ContactPerson" value="@Model.ContactPerson" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="input-label" for="spoc">No.Position</label>
        <input type="number" min="0" class="form-control input-elements width-70" id="noposition" required name="NoPosition" value="@Model.NoPosition" />
    </div>
</form>


<script>
    CKEDITOR.replace('jobDetails');
    $(document).ready(function () {
        //$("#jobRole").chosen({width:"100%"});
        $(".chosen-select-no-single").chosen({});
        var str_array = '@Model.JobTitleId.Replace(" ", "")';
        var arr = str_array.split(',');
        $("#jobRole").val(arr).trigger("chosen:updated");

        initializeCalendars(true, true);
        multiselector.initSelector(
            $('select#jobRole'),
            {
                nonSelectedText: 'Select job role'
            },
            $("input[type=hidden]#hdnJobTitleId"),
            ","
        );
    });

    function initCalendar(selector, date, startDate) {
        let cal = tail.DateTime(selector, {
            dateFormat: "YYYY-mm-dd",
            timeFormat: false,
            position: "bottom",
            closeButton: false,
            dateStart: startDate ? startDate : new Date('01/01/2015')
        });
        cal.selectDate(date);
        cal.reload();
        $(selector).data(cal);
    }
    function initializeCalendars(isStartPicker, isEndPicker) {
        if (isStartPicker) {
            let sDate = new Date();
            //  start job
            initCalendar("input[type=date]#startDate", sDate, sDate);
            $("input[type=date]#startDate").data()
                .on("open", () => {
                })
                .on("close", () => {
                })
                .on("change", () => {
                    initializeCalendars(false, true);
                });
        }
        if (isEndPicker) {
            //  end job
            let sd = $("input[type=date]#startDate").data().fetchDate();
            initCalendar("input[type=date]#endDate",
                new Date(sd.setMonth(sd.getMonth() + 1)),
                new Date(sd.setMonth(sd.getMonth() - 1)));

            $("input[type=date]#endDate").data()
                .on("open", () => {
                })
                .on("close", () => {
                })
                .on("change", () => {

                });
        }
    }
    function toggleCalendar(_this) {
        $(_this).find("input[type=date]").data().toggle();
    }
</script>


